node {
    // Cleaning workspace
    cleanWs()

    def app
    def branchName = env.BRANCH_NAME.replaceAll("/", "-")
    def imageName = "helloworld-spring-boot"
    def registry = "dharun05"
    def imageTag = "${registry}/${imageName}:${branchName}"

    try {
        stage('Clone') {
            checkout scm
        }

        stage('Docker Build') {
            // Build Docker image with branch-specific tag
            app = docker.build(imageTag, "--no-cache .")
        }

        stage('Push to Registry') {
            echo "Pushing Docker image to Docker Registry"
            
            // Log in to Docker registry using credentials stored in Jenkins
            withCredentials([string(credentialsId: 'docker_registry_token', variable: 'TOKEN')]) {
                sh '''
                     docker login -u dharun05 -p "$TOKEN"
                '''
            }

            // Push the Docker image to the registry
            docker.withRegistry('https://docker.io') {
                app.push(imageTag) // Push with branch-specific tag
            }
        }

    } catch (Exception e) {
        currentBuild.result = 'FAILURE'
        throw e
    } finally {
        // Clean workspace after the build process
        cleanWs()
    }
}
